{{- $fullName := include "homelab.fullname" . -}}
{{- $values := .Values }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    app.kubernetes.io/name: {{ include "homelab.name" . }}
    helm.sh/chart: {{ include "homelab.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | trim | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.global.securityContext }}
  securityContext:
    runAsNonRoot: {{ .runAsNonRoot | default false }}
    runAsUser: {{ .runAsUser | default 1000 }}
    runAsGroup: {{ .runAsGroup | default 3000 }}
    fsGroup: {{ .fsGroup | default 2000 }}
  {{- end }}
  replicas: {{ .Values.global.replicaCount }}
  strategy:
    type: {{ .Values.global.strategy | default "RollingUpdate" }}
  revisionHistoryLimit: {{ .Values.global.revisionHistoryLimit | default 5 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "homelab.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      {{- with .Values.pod.annotations }}
      annotations:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "homelab.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.pod.labels }}
        {{- toYaml . | trim | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- with .Values.global.securityContext }}
      securityContext:
        fsGroup: {{ .fsGroup | default 2000 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.global.image.repository }}:{{ .Values.global.image.tag }}
          imagePullPolicy: IfNotPresent
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path | default "/" }}
              port: {{ .Values.livenessProbe.httpGet.port | default .Values.service.port | default 80  }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | default 1 }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | default 3 }}
            successThreshold: {{ .Values.livenessProbe.successThreshold | default 1 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path | default "/" }}
              port: {{ .Values.readinessProbe.httpGet.port | default .Values.service.port | default 80  }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | default 1 }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | default 3 }}
            successThreshold: {{ .Values.readinessProbe.successThreshold | default 1 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.httpGet.path | default "/" }}
              port: {{ .Values.startupProbe.httpGet.port | default .Values.service.port | default 80  }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds | default 1 }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold | default 3 }}
            successThreshold: {{ .Values.startupProbe.successThreshold | default 1 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default .Values.service.port | default 80  }}
              protocol: {{ .Values.service.protocol | default "TCP" }}
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}
          {{- if .Values.extraEnvs }}
          env:
{{ toYaml .Values.extraEnvs | indent 12 }}
          {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            {{- range .Values.persistence.volumes }}
            - name: {{ .name }}-volume
              mountPath: {{ .mountPath | default (printf "/%s" .name) }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        {{- range .Values.persistence.volumes }}
        - name: {{ .name }}-volume
          {{- if eq .type "pvc" }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" $fullName .name }}
          {{- end }}
        {{- end }}
      {{- end }}
  minReadySeconds: 10
  revisionHistoryLimit: 0
