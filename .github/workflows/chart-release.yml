name: Release Charts

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      
      - name: Get Changed Charts
        id: changed-charts
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep '^charts/' | cut -d'/' -f1,2 | uniq)
          if [ -z "$CHANGED_FILES" ]; then
            echo "::warning file=github-actions.log::No charts changed."
            exit 0  # Exit with 0 (success) to stop the workflow without failure
          fi
          echo "CHARTS=$(echo $CHANGED_FILES | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Lint Changed Charts
        if: env.CHARTS != ''
        run: |
          for chart in $CHARTS; do
            echo "Linting chart: $chart"
            if [ -f "$chart/lint-values.yaml" ]; then
              echo "Using lint-values.yaml for $chart"
              helm lint "$chart" --values "$chart/lint-values.yaml"
            elif [ -f "$chart/values.yaml" ]; then
              echo "Using values.yaml for $chart"
              helm lint "$chart" --values "$chart/values.yaml"
            else
              echo "No values file found for $chart, using default values"
              helm lint "$chart"
            fi
          done

      - name: Template Changed Charts
        if: env.CHARTS != ''
        run: |
          for chart in $CHARTS; do
            echo "Rendering templates for chart: $chart"

            # Check if lint-values.yaml exists
            if [ -f "$chart/lint-values.yaml" ]; then
              echo "Using lint-values.yaml for $chart"
              helm template "$chart" --values "$chart/lint-values.yaml"
            elif [ -f "$chart/values.yaml" ]; then
              echo "Using values.yaml for $chart"
              helm template "$chart" --values "$chart/values.yaml"
            else
              echo "No values file found for $chart, using default values"
              helm template "$chart"
            fi
          done
      
      - name: Set Chart Version
        id: set_version
        run: |
          CHART_VERSION=$(yq eval '.version' .$chart/Chart.yaml)
          echo "chart_version=$CHART_VERSION" >> $GITHUB_ENV
  
      - name: Run chart-releaser for PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: ${{ format('{0}-alpha-{1}', env.chart_version, github.run_number) }}
  
      - name: Run chart-releaser for non-PR
        if: ${{ github.event_name != 'pull_request' }}
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NAME_TEMPLATE: ${{ env.chart_version }}